# Generated by Django 3.0.2 on 2020-02-02 16:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('staff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_of_graduation', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3500), django.core.validators.MinValueValidator(2020)], verbose_name='Year of Graduation ')),
                ('active', models.BooleanField(default=True)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Class + Streams (Normal Classes)',
                'ordering': ['class_numeral', 'stream'],
            },
        ),
        migrations.CreateModel(
            name='ClassNumeral',
            fields=[
                ('name', models.IntegerField(help_text='For Example: 1,2,3. Streams (eg; east) will be added later', primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(1)])),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Class Numerals',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Club, Society or Organisation Name', max_length=20)),
                ('purpose', models.TextField(blank=True, max_length=30, null=True)),
                ('more_information', models.TextField(blank=True, max_length=100, null=True)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name', 'purpose'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Example: End Term ', max_length=50)),
                ('term', models.CharField(choices=[('Term Two', 'Term One'), ('Term Two', 'Term Two'), (' Term Three', ' Term Three')], max_length=11)),
                ('year', models.IntegerField(validators=[django.core.validators.MaxValueValidator(3500), django.core.validators.MinValueValidator(2020)])),
                ('exam_start_date', models.DateField()),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['year', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('name', models.CharField(help_text='For Example: East, Yellow, e.t.c', max_length=15, primary_key=True, serialize=False)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
                ('hod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subjectHODs', to='staff.TeachingStaff')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='SubjectTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actively_teaching', models.BooleanField(default=True)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='academics.Subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.TeachingStaff')),
            ],
            options={
                'ordering': ['subject', 'teacher'],
            },
        ),
        migrations.CreateModel(
            name='SubjectTeacherClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.Classes')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='academics.SubjectTeacher')),
            ],
            options={
                'ordering': ['Class', 'teacher'],
            },
        ),
        migrations.CreateModel(
            name='ExamPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('kiswahili', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('mathematics', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('science', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('social_studies', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('religious_education', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('total', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(0)])),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('time_last_edited', models.DateTimeField(auto_now=True)),
                ('exam_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='academics.Exam')),
            ],
        ),
    ]
